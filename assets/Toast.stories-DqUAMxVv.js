import{j as e}from"./index-BwXyKlkv.js";import{c as m,B as d,d as l}from"./index-Cm49-Z1S.js";import{r as u}from"./index-2yJIXLcc.js";import"./index-Bn05qqr6.js";const O={title:"Typography/Toast",component:m,tags:["autodocs"],parameters:{layout:"centered",docs:{description:{component:"Componente utilizado para exibir um toast"}}},decorators:[n=>{const[p,o]=u.useState(!1),i="Agendamento realizado",c=e.jsx("time",{dateTime:new Date().toISOString(),children:new Date().toISOString()});return e.jsxs(d,{css:{height:"300px",width:"600px"},children:[e.jsx(l,{onClick:()=>o(!0),children:"Open"}),e.jsx(n,{args:{open:p,onOpenChange:o,toastTitle:i,toastDescription:c}})]})}],argTypes:{open:{control:"boolean",description:"nesse parâmetro você deve passar a variável booleana para controlar o toast"},onOpenChange:{description:"nesse parâmetro voce deve passar a função setter do estado que controla o toast"},toastTitle:{control:"text",description:"nesse parâmetro você passa uma string que representará o título"},toastDescription:{description:"nesse parâmetro você passa um elemento ReactNode"}}},t={};var r,a,s;t.parameters={...t.parameters,docs:{...(r=t.parameters)==null?void 0:r.docs,source:{originalSource:"{}",...(s=(a=t.parameters)==null?void 0:a.docs)==null?void 0:s.source}}};const T=["Primary"];export{t as Primary,T as __namedExportsOrder,O as default};
